/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thrift.domain;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 测试类
 * 
 */
public class WmCreateAccountRequest implements org.apache.thrift.TBase<WmCreateAccountRequest, WmCreateAccountRequest._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WmCreateAccountRequest");

  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ACCOUNT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("accountType", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PARTNER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerId", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField PARTNER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerType", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField PARTNER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField POI_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("poiFlag", org.apache.thrift.protocol.TType.I32, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new WmCreateAccountRequestStandardSchemeFactory());
    schemes.put(TupleScheme.class, new WmCreateAccountRequestTupleSchemeFactory());
  }

  public int source; // required
  public int accountType; // required
  public long partnerId; // required
  public int partnerType; // required
  public String partnerName; // required
  public int poiFlag; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SOURCE((short)1, "source"),
    ACCOUNT_TYPE((short)2, "accountType"),
    PARTNER_ID((short)3, "partnerId"),
    PARTNER_TYPE((short)4, "partnerType"),
    PARTNER_NAME((short)5, "partnerName"),
    POI_FLAG((short)6, "poiFlag");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SOURCE
          return SOURCE;
        case 2: // ACCOUNT_TYPE
          return ACCOUNT_TYPE;
        case 3: // PARTNER_ID
          return PARTNER_ID;
        case 4: // PARTNER_TYPE
          return PARTNER_TYPE;
        case 5: // PARTNER_NAME
          return PARTNER_NAME;
        case 6: // POI_FLAG
          return POI_FLAG;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SOURCE_ISSET_ID = 0;
  private static final int __ACCOUNTTYPE_ISSET_ID = 1;
  private static final int __PARTNERID_ISSET_ID = 2;
  private static final int __PARTNERTYPE_ISSET_ID = 3;
  private static final int __POIFLAG_ISSET_ID = 4;
  private BitSet __isset_bit_vector = new BitSet(5);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ACCOUNT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("accountType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARTNER_ID, new org.apache.thrift.meta_data.FieldMetaData("partnerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PARTNER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("partnerType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARTNER_NAME, new org.apache.thrift.meta_data.FieldMetaData("partnerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POI_FLAG, new org.apache.thrift.meta_data.FieldMetaData("poiFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WmCreateAccountRequest.class, metaDataMap);
  }

  public WmCreateAccountRequest() {
  }

  public WmCreateAccountRequest(
    int source,
    int accountType,
    long partnerId,
    int partnerType,
    String partnerName,
    int poiFlag)
  {
    this();
    this.source = source;
    setSourceIsSet(true);
    this.accountType = accountType;
    setAccountTypeIsSet(true);
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
    this.partnerType = partnerType;
    setPartnerTypeIsSet(true);
    this.partnerName = partnerName;
    this.poiFlag = poiFlag;
    setPoiFlagIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WmCreateAccountRequest(WmCreateAccountRequest other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.source = other.source;
    this.accountType = other.accountType;
    this.partnerId = other.partnerId;
    this.partnerType = other.partnerType;
    if (other.isSetPartnerName()) {
      this.partnerName = other.partnerName;
    }
    this.poiFlag = other.poiFlag;
  }

  public WmCreateAccountRequest deepCopy() {
    return new WmCreateAccountRequest(this);
  }

  @Override
  public void clear() {
    setSourceIsSet(false);
    this.source = 0;
    setAccountTypeIsSet(false);
    this.accountType = 0;
    setPartnerIdIsSet(false);
    this.partnerId = 0;
    setPartnerTypeIsSet(false);
    this.partnerType = 0;
    this.partnerName = null;
    setPoiFlagIsSet(false);
    this.poiFlag = 0;
  }

  public int getSource() {
    return this.source;
  }

  public WmCreateAccountRequest setSource(int source) {
    this.source = source;
    setSourceIsSet(true);
    return this;
  }

  public void unsetSource() {
    __isset_bit_vector.clear(__SOURCE_ISSET_ID);
  }

  /** Returns true if field source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return __isset_bit_vector.get(__SOURCE_ISSET_ID);
  }

  public void setSourceIsSet(boolean value) {
    __isset_bit_vector.set(__SOURCE_ISSET_ID, value);
  }

  public int getAccountType() {
    return this.accountType;
  }

  public WmCreateAccountRequest setAccountType(int accountType) {
    this.accountType = accountType;
    setAccountTypeIsSet(true);
    return this;
  }

  public void unsetAccountType() {
    __isset_bit_vector.clear(__ACCOUNTTYPE_ISSET_ID);
  }

  /** Returns true if field accountType is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountType() {
    return __isset_bit_vector.get(__ACCOUNTTYPE_ISSET_ID);
  }

  public void setAccountTypeIsSet(boolean value) {
    __isset_bit_vector.set(__ACCOUNTTYPE_ISSET_ID, value);
  }

  public long getPartnerId() {
    return this.partnerId;
  }

  public WmCreateAccountRequest setPartnerId(long partnerId) {
    this.partnerId = partnerId;
    setPartnerIdIsSet(true);
    return this;
  }

  public void unsetPartnerId() {
    __isset_bit_vector.clear(__PARTNERID_ISSET_ID);
  }

  /** Returns true if field partnerId is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerId() {
    return __isset_bit_vector.get(__PARTNERID_ISSET_ID);
  }

  public void setPartnerIdIsSet(boolean value) {
    __isset_bit_vector.set(__PARTNERID_ISSET_ID, value);
  }

  public int getPartnerType() {
    return this.partnerType;
  }

  public WmCreateAccountRequest setPartnerType(int partnerType) {
    this.partnerType = partnerType;
    setPartnerTypeIsSet(true);
    return this;
  }

  public void unsetPartnerType() {
    __isset_bit_vector.clear(__PARTNERTYPE_ISSET_ID);
  }

  /** Returns true if field partnerType is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerType() {
    return __isset_bit_vector.get(__PARTNERTYPE_ISSET_ID);
  }

  public void setPartnerTypeIsSet(boolean value) {
    __isset_bit_vector.set(__PARTNERTYPE_ISSET_ID, value);
  }

  public String getPartnerName() {
    return this.partnerName;
  }

  public WmCreateAccountRequest setPartnerName(String partnerName) {
    this.partnerName = partnerName;
    return this;
  }

  public void unsetPartnerName() {
    this.partnerName = null;
  }

  /** Returns true if field partnerName is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerName() {
    return this.partnerName != null;
  }

  public void setPartnerNameIsSet(boolean value) {
    if (!value) {
      this.partnerName = null;
    }
  }

  public int getPoiFlag() {
    return this.poiFlag;
  }

  public WmCreateAccountRequest setPoiFlag(int poiFlag) {
    this.poiFlag = poiFlag;
    setPoiFlagIsSet(true);
    return this;
  }

  public void unsetPoiFlag() {
    __isset_bit_vector.clear(__POIFLAG_ISSET_ID);
  }

  /** Returns true if field poiFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetPoiFlag() {
    return __isset_bit_vector.get(__POIFLAG_ISSET_ID);
  }

  public void setPoiFlagIsSet(boolean value) {
    __isset_bit_vector.set(__POIFLAG_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((Integer)value);
      }
      break;

    case ACCOUNT_TYPE:
      if (value == null) {
        unsetAccountType();
      } else {
        setAccountType((Integer)value);
      }
      break;

    case PARTNER_ID:
      if (value == null) {
        unsetPartnerId();
      } else {
        setPartnerId((Long)value);
      }
      break;

    case PARTNER_TYPE:
      if (value == null) {
        unsetPartnerType();
      } else {
        setPartnerType((Integer)value);
      }
      break;

    case PARTNER_NAME:
      if (value == null) {
        unsetPartnerName();
      } else {
        setPartnerName((String)value);
      }
      break;

    case POI_FLAG:
      if (value == null) {
        unsetPoiFlag();
      } else {
        setPoiFlag((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SOURCE:
      return Integer.valueOf(getSource());

    case ACCOUNT_TYPE:
      return Integer.valueOf(getAccountType());

    case PARTNER_ID:
      return Long.valueOf(getPartnerId());

    case PARTNER_TYPE:
      return Integer.valueOf(getPartnerType());

    case PARTNER_NAME:
      return getPartnerName();

    case POI_FLAG:
      return Integer.valueOf(getPoiFlag());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SOURCE:
      return isSetSource();
    case ACCOUNT_TYPE:
      return isSetAccountType();
    case PARTNER_ID:
      return isSetPartnerId();
    case PARTNER_TYPE:
      return isSetPartnerType();
    case PARTNER_NAME:
      return isSetPartnerName();
    case POI_FLAG:
      return isSetPoiFlag();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof WmCreateAccountRequest)
      return this.equals((WmCreateAccountRequest)that);
    return false;
  }

  public boolean equals(WmCreateAccountRequest that) {
    if (that == null)
      return false;

    boolean this_present_source = true;
    boolean that_present_source = true;
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (this.source != that.source)
        return false;
    }

    boolean this_present_accountType = true;
    boolean that_present_accountType = true;
    if (this_present_accountType || that_present_accountType) {
      if (!(this_present_accountType && that_present_accountType))
        return false;
      if (this.accountType != that.accountType)
        return false;
    }

    boolean this_present_partnerId = true;
    boolean that_present_partnerId = true;
    if (this_present_partnerId || that_present_partnerId) {
      if (!(this_present_partnerId && that_present_partnerId))
        return false;
      if (this.partnerId != that.partnerId)
        return false;
    }

    boolean this_present_partnerType = true;
    boolean that_present_partnerType = true;
    if (this_present_partnerType || that_present_partnerType) {
      if (!(this_present_partnerType && that_present_partnerType))
        return false;
      if (this.partnerType != that.partnerType)
        return false;
    }

    boolean this_present_partnerName = true && this.isSetPartnerName();
    boolean that_present_partnerName = true && that.isSetPartnerName();
    if (this_present_partnerName || that_present_partnerName) {
      if (!(this_present_partnerName && that_present_partnerName))
        return false;
      if (!this.partnerName.equals(that.partnerName))
        return false;
    }

    boolean this_present_poiFlag = true;
    boolean that_present_poiFlag = true;
    if (this_present_poiFlag || that_present_poiFlag) {
      if (!(this_present_poiFlag && that_present_poiFlag))
        return false;
      if (this.poiFlag != that.poiFlag)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(WmCreateAccountRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    WmCreateAccountRequest typedOther = (WmCreateAccountRequest)other;

    lastComparison = Boolean.valueOf(isSetSource()).compareTo(typedOther.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, typedOther.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountType()).compareTo(typedOther.isSetAccountType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountType, typedOther.accountType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerId()).compareTo(typedOther.isSetPartnerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerId, typedOther.partnerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerType()).compareTo(typedOther.isSetPartnerType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerType, typedOther.partnerType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerName()).compareTo(typedOther.isSetPartnerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerName, typedOther.partnerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoiFlag()).compareTo(typedOther.isSetPoiFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoiFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poiFlag, typedOther.poiFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("WmCreateAccountRequest(");
    boolean first = true;

    sb.append("source:");
    sb.append(this.source);
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountType:");
    sb.append(this.accountType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerId:");
    sb.append(this.partnerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerType:");
    sb.append(this.partnerType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerName:");
    if (this.partnerName == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("poiFlag:");
    sb.append(this.poiFlag);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WmCreateAccountRequestStandardSchemeFactory implements SchemeFactory {
    public WmCreateAccountRequestStandardScheme getScheme() {
      return new WmCreateAccountRequestStandardScheme();
    }
  }

  private static class WmCreateAccountRequestStandardScheme extends StandardScheme<WmCreateAccountRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WmCreateAccountRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.source = iprot.readI32();
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ACCOUNT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.accountType = iprot.readI32();
              struct.setAccountTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PARTNER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.partnerId = iprot.readI64();
              struct.setPartnerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PARTNER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.partnerType = iprot.readI32();
              struct.setPartnerTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PARTNER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerName = iprot.readString();
              struct.setPartnerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // POI_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.poiFlag = iprot.readI32();
              struct.setPoiFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WmCreateAccountRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(SOURCE_FIELD_DESC);
      oprot.writeI32(struct.source);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ACCOUNT_TYPE_FIELD_DESC);
      oprot.writeI32(struct.accountType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PARTNER_ID_FIELD_DESC);
      oprot.writeI64(struct.partnerId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PARTNER_TYPE_FIELD_DESC);
      oprot.writeI32(struct.partnerType);
      oprot.writeFieldEnd();
      if (struct.partnerName != null) {
        oprot.writeFieldBegin(PARTNER_NAME_FIELD_DESC);
        oprot.writeString(struct.partnerName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(POI_FLAG_FIELD_DESC);
      oprot.writeI32(struct.poiFlag);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WmCreateAccountRequestTupleSchemeFactory implements SchemeFactory {
    public WmCreateAccountRequestTupleScheme getScheme() {
      return new WmCreateAccountRequestTupleScheme();
    }
  }

  private static class WmCreateAccountRequestTupleScheme extends TupleScheme<WmCreateAccountRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WmCreateAccountRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetSource()) {
        optionals.set(0);
      }
      if (struct.isSetAccountType()) {
        optionals.set(1);
      }
      if (struct.isSetPartnerId()) {
        optionals.set(2);
      }
      if (struct.isSetPartnerType()) {
        optionals.set(3);
      }
      if (struct.isSetPartnerName()) {
        optionals.set(4);
      }
      if (struct.isSetPoiFlag()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetSource()) {
        oprot.writeI32(struct.source);
      }
      if (struct.isSetAccountType()) {
        oprot.writeI32(struct.accountType);
      }
      if (struct.isSetPartnerId()) {
        oprot.writeI64(struct.partnerId);
      }
      if (struct.isSetPartnerType()) {
        oprot.writeI32(struct.partnerType);
      }
      if (struct.isSetPartnerName()) {
        oprot.writeString(struct.partnerName);
      }
      if (struct.isSetPoiFlag()) {
        oprot.writeI32(struct.poiFlag);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WmCreateAccountRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.source = iprot.readI32();
        struct.setSourceIsSet(true);
      }
      if (incoming.get(1)) {
        struct.accountType = iprot.readI32();
        struct.setAccountTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.partnerId = iprot.readI64();
        struct.setPartnerIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.partnerType = iprot.readI32();
        struct.setPartnerTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.partnerName = iprot.readString();
        struct.setPartnerNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.poiFlag = iprot.readI32();
        struct.setPoiFlagIsSet(true);
      }
    }
  }

}

